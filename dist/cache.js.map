{"version":3,"sources":["cache.js"],"names":[],"mappings":";;;AAGA,YAAY,CAAC;;;;;;;;;;IAEQ,KAAK;AAEb,WAFQ,KAAK,CAEZ,GAAG,EAAE;0BAFE,KAAK;;AAGtB,QAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,QAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,QAAI,CAAC,KAAK,GAAG;AACX,cAAQ,EAAE,CAAC;AACX,UAAI,EAAE,CAAC;KACR,CAAC;GACH;;eATkB,KAAK;;WAWrB,aAAC,EAAE,EAAE;;AAEN,UAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,EAAE;;AAE3C,YAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;AACxB,YAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;OACrB;;AAED,UAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;;AAEtB,UAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;;AAE3B,UAAI,KAAK,EAAE;;AAET,YAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;;AAE5B,YAAI,CAAC,OAAO,IAAI,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE;AACrC,cAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AAClB,iBAAO,KAAK,CAAC,KAAK,CAAC;SACpB,MAAM,IAAI,OAAO,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;AAC1C,cAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SACjB;OAEF;;AAED,aAAO,IAAI,CAAC;KAEb;;;WAEE,aAAC,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;;AAElB,UAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG;AACf,eAAO,EAAE,AAAC,GAAG,IAAI,IAAI,CAAC,GAAG,GAAI,IAAI,CAAC,GAAG,EAAE,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,CAAA,AAAC,GAAG,CAAC;AAC/D,aAAK,EAAE,KAAK;OACb,CAAC;;AAEF,aAAO,KAAK,CAAC;KAEd;;;WAEK,gBAAC,EAAE,EAAE;;AAET,UAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;;AAE3B,UAAI,KAAK,EAAE;AACT,eAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACtB,eAAO,KAAK,CAAC,KAAK,CAAC;OACpB;;AAED,aAAO,KAAK,CAAC;KAEd;;;WAEI,iBAAG;AACN,UAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,UAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;AACxB,UAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;KACrB;;;SApEkB,KAAK;;;qBAAL,KAAK","file":"cache.js","sourcesContent":["/*\n * Generic cache.\n */\n'use strict';\n\nexport default class Cache {\n  \n  constructor(ttl) {\n    this.ttl = ttl;\n    this.cache = {};\n    this.stats = {\n      attempts: 0,\n      hits: 0\n    };\n  }\n\n  get(id) {\n\n    if (this.stats.attempts >= Number.MAX_VALUE) {\n      // Reset counters so they are in agreement after roll\n      this.stats.attempts = 0;\n      this.stats.hits = 0;\n    }\n\n    this.stats.attempts++;\n\n    var entry = this.cache[id];\n\n    if (entry) {\n\n      var expires = entry.expires;\n\n      if (!expires || expires >= Date.now()) {\n        this.stats.hits++;\n        return entry.value;\n      } else if (expires && expires < Date.now()) {\n        this.remove(id);\n      }\n\n    }\n\n    return null;\n\n  }\n\n  put(id, value, ttl) {\n\n    this.cache[id] = {\n      expires: (ttl || this.ttl) ? Date.now() + (ttl || this.ttl) : 0,\n      value: value\n    };\n\n    return value;\n\n  }\n\n  remove(id) {\n\n    var entry = this.cache[id];\n\n    if (entry) {\n      delete this.cache[id];\n      return entry.value;\n    }\n\n    return entry;\n\n  }\n\n  flush() { \n    this.cache = {};\n    this.stats.attempts = 0;\n    this.stats.hits = 0;\n  }\n\n}\n"],"sourceRoot":"/source/"}